#!/usr/bin/env perl

use strict;
use warnings;
use POSIX qw/strftime/;

my $timestamp = strftime("%Y-%m-%dT%H:%M:%SZ", gmtime);
my $backup_str = strftime("%Y%m%d%H%M%S", gmtime) . '.bak';

my $tag = 'Autogenerated by literate vim. Any edits will be overwritten';

sub has_tag {
    my ($filename) = @_;
    my $head = qx/head -n5 '$filename'/ =~ /^\s*"?\s*\Q$tag\E$/m;
}

$/ = undef; # slurp instead of splitting by lines
while (<>) {
    my $filename = $ARGV;
    my $output = $filename;
    die "$filename does not have .md extension" unless $output =~ s/\.md$//;

    # If this output file doesn't have our expected tag, make a backup first
    if (-e $output && ! has_tag($output)) {
        `cp $output $output.$backup_str`;
        print "Backed up $output to $output.$backup_str\n";
    }

    open(my $fh, ">", $output) or die "Can't open > $output: $!";

    print $fh <<EOF;
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" $tag
" Updated: $timestamp
" Source: $filename
" Output: $output
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
EOF
    # The real meat of the code: only output fenced code blocks
    while (/^(```|~~~)(\w*)$(.*?)^\1$/smg) {
        if ("$2" eq "lua") {
            print $fh "\nlua <<EOF$3EOF\n"
        } else {
            print $fh "$3";
        }
    }
    close $fh;

    print "\"$output\" generated\n";
}
